plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
}

group = 'com.kbskyblock'
version = '1.0.9'
description= 'coloapi'


def targetJavaVersion = 21

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "rosewood-repo"
        url = "https://repo.rosewooddev.io/repository/public/"
    }


    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT"
    implementation "org.spigotmc:spigot:1.17.1"
    implementation "org.apache.commons:commons-lang3:3.13.0"

    testImplementation "org.junit.jupiter:junit-jupiter:5.8.1"
    testImplementation "org.mockito:mockito-inline:4.0.0"
    testImplementation "org.mockito:mockito-junit-jupiter:4.0.0"
}





java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion.set(JavaLanguageVersion.of(targetJavaVersion))
    }
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}
tasks.withType(Test) {
    useJUnitPlatform()
    forkEvery = 1
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.named('build') {
    dependsOn tasks.named('test')
}

tasks.register('runPaperServer', xyz.jpenilla.runpaper.task.RunServer) {
    minecraftVersion.set('1.21')
}