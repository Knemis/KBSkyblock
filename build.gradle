buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.johnrengelman.shadow:com.github.johnrengelman.shadow.gradle.plugin:8.1.1'
    }
}

plugins {
    id 'java'
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false

}

allprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'

    group = 'com.kbskyblock'
    version = '1.0.0-SNAPSHOT'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.codemc.io/repository/maven-public/" }
        maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        maven { url 'https://hub.spigotmc.org/nexus/content/groups/public/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://repo.codemc.org/repository/maven-public/' }
        maven { url 'https://jitpack.io' }
        maven { url 'https://repo.papermc.io/repository/maven-public/' }
        maven { url 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
        maven { url 'https://repo.essentialsx.net/releases/' }
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }
}

// Common configuration for all multiversion modules
project(':core:multiversion').subprojects {
    dependencies {
        if (project.name != 'common' && project.name != 'default') {
            def mcVersion = project.name.replace('v', '').replace('_R1', '')
                .replace('_R2', '').replace('_R3', '').replace('_R4', '')
                .replace('_', '.')

            // Sadece 1.13 ve 端st端 s端r端mleri kullan
            if (mcVersion.startsWith('1.13') ||
                mcVersion.startsWith('1.14') || 
                mcVersion.startsWith('1.15') || 
                mcVersion.startsWith('1.16') || 
                mcVersion.startsWith('1.17') || 
                mcVersion.startsWith('1.18') || 
                mcVersion.startsWith('1.19') || 
                mcVersion.startsWith('1.20')) {
                
                def spigotVersion = "${mcVersion}-R0.1-SNAPSHOT"
                compileOnly "org.spigotmc:spigot-api:${spigotVersion}"
            }
        }
        
        implementation 'com.github.cryptomorin:XSeries:9.8.0'
        implementation 'io.papermc:paperlib:1.0.8'
        implementation 'org.apache.commons:commons-lang3:3.14.0'
    }
}

// Special configuration for common module
project(':core:multiversion:common') {
    dependencies {
        compileOnly 'org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT'
        implementation 'com.github.cryptomorin:XSeries:9.8.0'
        implementation 'io.papermc:paperlib:1.0.8'
    }
}

subprojects {
    apply plugin: 'com.github.johnrengelman.shadow'

    dependencies {
        compileOnly 'org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT'
        compileOnly 'org.projectlombok:lombok:1.18.30'
        annotationProcessor 'org.projectlombok:lombok:1.18.30'
        implementation 'de.tr7zw:item-nbt-api:2.12.2'

        if (project.path == ':core') {
            implementation project(':colorapi')
            implementation 'de.tr7zw:item-nbt-api:2.15.0'
            implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
            implementation 'org.yaml:snakeyaml:2.2'
            implementation 'io.papermc:paperlib:1.0.8'
            implementation 'org.apache.commons:commons-lang3:3.14.0'
        }

        if (project.path == ':colorapi') {
            implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
            implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.1'
            implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.1'
        }

        if (project.path == ':teams') {
            implementation project(':core')
            implementation project(':core:multiversion:common')
            implementation 'com.github.cryptomorin:XSeries:9.8.0'
            implementation 'com.j256.ormlite:ormlite-core:6.1'
            implementation 'com.j256.ormlite:ormlite-jdbc:6.1'
            implementation 'org.bstats:bstats-bukkit:3.0.2'
            implementation 'commons-lang:commons-lang:2.6'
            implementation 'io.papermc:paperlib:1.0.8'
            compileOnly 'me.clip:placeholderapi:2.11.6'
            compileOnly('net.essentialsx:EssentialsX:2.20.1') {
                exclude group: 'org.spigotmc', module: 'spigot-api'
            }
        }
    }

    shadowJar {
        archiveClassifier.set('')
        mergeServiceFiles()
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.SF'

        if (project.path == ':core') {
            relocate 'de.tr7zw', 'com.kbskyblock.core.libs.tr7zw'
            relocate 'com.kbskyblock.colorapi', 'com.kbskyblock.core.libs.colorapi'
            relocate 'com.fasterxml.jackson', 'com.kbskyblock.core.libs.jackson'
            relocate 'org.yaml.snakeyaml', 'com.kbskyblock.core.libs.snakeyaml'
            relocate 'io.papermc.paperlib', 'com.kbskyblock.core.libs.paperlib'
            relocate 'org.apache.commons', 'com.kbskyblock.core.libs.commons'
        }

        if (project.path == ':colorapi') {
            relocate 'com.fasterxml.jackson', 'com.kbskyblock.libs.jackson'
            relocate 'org.apache.commons', 'com.kbskyblock.libs.commons'
        }

        if (project.path == ':teams') {
            relocate 'com.j256.ormlite', 'com.kbskyblock.teams.libs.ormlite'
            relocate 'org.bstats', 'com.kbskyblock.teams.libs.bstats'
            relocate 'com.cryptomorin.xseries', 'com.kbskyblock.teams.libs.xseries'
            relocate 'org.apache.commons', 'com.kbskyblock.teams.libs.commons'
            relocate 'io.papermc.paperlib', 'com.kbskyblock.teams.libs.paperlib'
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        options.release = 17
    }

    processResources {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
        
        filesMatching('plugin.yml') {
            expand(
                version: project.version,
                name: project.name.toLowerCase()
            )
        }
    }
}